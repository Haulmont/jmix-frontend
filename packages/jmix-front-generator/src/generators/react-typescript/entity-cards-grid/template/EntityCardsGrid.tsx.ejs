import React, { useContext } from "react";
import { observer } from "mobx-react";
import { Row, Col, Card } from "antd";
import {<%= entity.className %>} from "<%= relDirShift %>jmix/entities/<%= entity.name %>";
import { getFields, ScreensContext } from "@haulmont/jmix-react-core";
import {
  defaultGridPaginationConfig,
  EntityProperty,
  Paging,
  RetryDialog,
  Spinner,
  useEntityList,
  registerScreen,
} from "@haulmont/jmix-react-ui";
import { getStringId } from "@haulmont/jmix-rest";
import { gql } from "@apollo/client";

const ENTITY_NAME = '<%= entity.name %>';
const ROUTING_PATH = '/<%= nameLiteral %>';

const <%= dollarsToUnderscores(entity.name).toUpperCase() %>_LIST = gql`
  query <%= dollarsToUnderscores(entity.name) %>List($limit: Int, $offset: Int, $orderBy: inp_<%= dollarsToUnderscores(entity.name) %>OrderBy, $filter: [inp_<%= dollarsToUnderscores(entity.name) %>FilterCondition]) {
    <%= dollarsToUnderscores(entity.name) %>Count
    <%= dollarsToUnderscores(entity.name) %>List(limit: $limit, offset: $offset, orderBy: $orderBy, filter: $filter) <%= query -%>
  }
`;

export const <%= className %> = observer(() => {
  const {
    executeListQuery,
    listQueryResult: { loading, error, data },
    handlePaginationChange,
    entityListState
  } = useEntityList<<%= entity.className %>>({
    listQuery: <%= dollarsToUnderscores(entity.name).toUpperCase() %>_LIST,
    entityName: ENTITY_NAME,
    routingPath: ROUTING_PATH,
    paginationConfig: defaultGridPaginationConfig,
  });

  if (error != null) {
    console.error(error);
    return <RetryDialog onRetry={executeListQuery} />;
  }

  if (loading || data == null) {
    return <Spinner />;
  }

  const dataSource = data?.<%= dollarsToUnderscores(entity.name) %>List ?? [];
  const pagesTotal = data?.<%= dollarsToUnderscores(entity.name) %>Count ?? 0;

  return (
    <div className='narrow-layout'>
      <Row gutter={[12, 12]}>
        {dataSource.map(e => (
          <Col 
            key={e.id ? getStringId(e.id) : undefined}  
            xl={<%= 24 / cardsInRow %>}
            sm={24}
          >
            <% /* todo null check of e.id will be removed after we strict id type in https://github.com/cuba-platform/frontend/issues/119 */ %>
            <Card 
              title={e._instanceName}
              style={{height: '100%'}}
            >
              {getFields(e).map(p =>
                <EntityProperty
                  entityName={<%= entity.className %>.NAME}
                  propertyName={p}
                  value={e[p]}
                  key={p}
                />
              )}
            </Card>
          </Col>
        ))}
      </Row>

      <div style={{ margin: "12px 0 12px 0", float: "right" }}>
        <Paging
          paginationConfig={entityListState.pagination ?? {}}
          onPagingChange={handlePaginationChange}
          total={pagesTotal}
        />
      </div>
    </div>
  )
});

registerScreen({
  component: <%= className %>,
  caption: '<%= nameLiteral %>',
  screenId: '<%= className %>',
  menuOptions: {
    pathPattern: ROUTING_PATH,
    menuLink: ROUTING_PATH,
  }
});

